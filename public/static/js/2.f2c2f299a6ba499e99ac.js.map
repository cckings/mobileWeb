{"version":3,"sources":["webpack:///src/view/myIntroduce/index.vue","webpack:///./src/view/myIntroduce/index.vue?e547","webpack:///./src/view/myIntroduce/index.vue","webpack:///./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/_dom7@2.1.2@dom7/dist/dom7.modular.js","webpack:///./node_modules/_swiper@4.4.1@swiper/dist/js/swiper.esm.bundle.js"],"names":["myIntroduce","name","created","mounted","swiper_esm_bundle","pagination","el","clickable","autoplay","direction","mousewheel","view_myIntroduce","render","_h","this","$createElement","_self","_c","ref","staticClass","_m","staticRenderFns","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","Object","keys","forEach","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","Array","isArray","slice","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","proto","static","install","m","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","transition$1","transitionStart","runCallbacks","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","swiper_esm_bundle_events","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","allowTouchMove","touchStartPreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_breakpoints","breakpoint","getBreakpoint","currentBreakpoint","breakPointsParams","originalParams","needsReLoop","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_Browser","isIE","isEdge","isSafari","isUiWebView","test","defaults","init","uniqueNavElements","preloadImages","updateOnImagesReady","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","Pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","slideThumbActiveClass","hideOnClick","number","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause"],"mappings":"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","file":"static/js/2.f2c2f299a6ba499e99ac.js","sourcesContent":["<template>\r\n  <div ref=\"myIntroduce\" class=\"my-introduce\">\r\n    <div class=\"swiper-container\">\r\n      <div class=\"swiper-wrapper\">\r\n        <div class=\"swiper-slide\">\r\n          slider1\r\n        </div>\r\n        <div class=\"swiper-slide\">\r\n          slider2\r\n        </div>\r\n        <div class=\"swiper-slide\">\r\n          slider3\r\n        </div>\r\n      </div>\r\n      <div class=\"swiper-pagination\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Swiper from 'swiper'\r\n  export default {\r\n    name: \"my-introduce\",\r\n    created() {\r\n\r\n    },\r\n    mounted() {\r\n      var mySwiper = new Swiper('.swiper-container', {\r\n        pagination: {\r\n          el: '.swiper-pagination',\r\n          clickable :true,\r\n        },\r\n        autoplay: false,\r\n        direction : 'vertical',\r\n        mousewheel : true,\r\n      })\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped type=\"text/scss\">\r\n  .my-introduce{\r\n    width: 100%;\r\n    height: 100%;\r\n    .swiper-container{\r\n      height: 100%;\r\n      line-height: 10rem;\r\n      text-align: center;\r\n      font-size: 50px;\r\n      .swiper-pagination{\r\n        right: 30px;\r\n        /deep/ .swiper-pagination-bullet{\r\n          width: 10px !important;\r\n          height: 10px !important;\r\n          margin: 12px 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/view/myIntroduce/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"myIntroduce\",staticClass:\"my-introduce\"},[_vm._m(0)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},[_c('div',{staticClass:\"swiper-slide\"},[_vm._v(\"\\n        slider1\\n      \")]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide\"},[_vm._v(\"\\n        slider2\\n      \")]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide\"},[_vm._v(\"\\n        slider3\\n      \")])]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination\"})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-d2158196\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/view/myIntroduce/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-d2158196\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d2158196\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-d2158196\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/view/myIntroduce/index.vue\n// module id = null\n// module chunks = ","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.1.2\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: September 13, 2018\n */\nimport { window, document } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_dom7@2.1.2@dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 4.4.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: September 14, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          slideSize = slide[0].getBoundingClientRect().width\n            + parseFloat(slideStyles.getPropertyValue('margin-left'))\n            + parseFloat(slideStyles.getPropertyValue('margin-right'));\n        } else {\n          slideSize = slide[0].getBoundingClientRect().height\n            + parseFloat(slideStyles.getPropertyValue('margin-top'))\n            + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data$$1.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data$$1.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n    if (preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data$$1.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n    const needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakPointsParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakPointsParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => a < b).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      swiper.virtual.update();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop) return;\n        swiper.slideNext();\n      });\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop) return;\n        swiper.slidePrev();\n      });\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click');\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click');\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_swiper@4.4.1@swiper/dist/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = "],"sourceRoot":""}