{"version":3,"sources":["webpack:///src/view/myIntroduce/components/child1.vue","webpack:///./src/view/myIntroduce/components/child1.vue?54c9","webpack:///./src/view/myIntroduce/components/child1.vue","webpack:///./src/view/myIntroduce/components/child2.vue?f62c","webpack:///./src/view/myIntroduce/components/child2.vue","webpack:///src/view/myIntroduce/components/child2.vue","webpack:///./src/view/myIntroduce/components/child3.vue?1625","webpack:///./src/view/myIntroduce/components/child3.vue","webpack:///src/view/myIntroduce/components/child3.vue","webpack:///./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/_dom7@2.1.3@dom7/dist/dom7.modular.js","webpack:///./node_modules/_swiper@4.5.0@swiper/dist/js/swiper.esm.bundle.js","webpack:///src/view/myIntroduce/index.vue","webpack:///./src/view/myIntroduce/index.vue?3111","webpack:///./src/view/myIntroduce/index.vue"],"names":["child1","name","data","stackArr","percent","bgc","computed","extends_default","Object","vuex_esm","xsScreen","state","baseStates","components_child1","render","_vm","this","_h","$createElement","_c","_self","class","staticClass","attrs","src","alt","_v","_l","item","index","key","_s","text-inside","stroke-width","percentage","color","staticRenderFns","myIntroduce_components_child1","__webpack_require__","normalizeComponent","ssrContext","components_child2","myIntroduce_components_child2","child2_normalizeComponent","components_child3","myIntroduce_components_child3","child3_normalizeComponent","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","keys","forEach","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","swiper_esm_bundle_Browser","isIE","isEdge","isSafari","ua","toLowerCase","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","Array","isArray","slice","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","proto","static","install","m","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","swiper_esm_bundle_transition","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","defaults","init","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","stopIndex","groupSize","ratio","onClick","stopImmediatePropagation","start","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","isHidden","number","get","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","swiper_esm_bundle","myIntroduce","childComponents","created","mounted","child2","child3","view_myIntroduce","ref","tag","myIntroduce_Component","myIntroduce_normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/4.999f0ca45388e5ef8788.js","sourcesContent":["<template>\n  <div :class=\"['myslf-baseinfo', xsScreen?'xs-screen':'']\">\n    <img src=\"https://lioncc.oss-cn-beijing.aliyuncs.com/base-avtor/logo-1.jpg\" alt=\"logo\" class=\"user-logo\">\n    <p class=\"user-name\">Cheng丶C</p>\n    <p class=\"brief-introduction\">一位奋战前线的搬砖农名工, 一心只读圣贤书，两耳不闻窗外事</p>\n    <div class=\"technology-stack\">\n      <p class=\"stack-title\">&nbsp;&nbsp;&nbsp;My Technology Stack</p>\n      <div class=\"stack-content\">\n        <ul>\n          <li v-for=\"(item, index) in stackArr\" :key=\"index\">\n            <span>{{item.name}}</span>\n            <span>\n              <el-progress :text-inside=\"true\" :stroke-width=\"15\"\n                           :percentage=\"item.percent\" :color=\"item.bgc\"></el-progress>\n            </span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { mapState } from \"vuex\"\n\n  export default {\n    name: \"child1\",\n    data() {\n      return {\n        stackArr: [\n          {\n            name: \"HTML/CSS\",\n            percent: 80,\n            bgc: '#8E71C7',\n          }, {\n            name: \"JS/JQuery\",\n            percent: 90,\n            bgc: '#409eff',\n          }, {\n            name: \"Vue\",\n            percent: 75,\n            bgc: '#67c23a',\n          }, {\n            name: \"Node\",\n            percent: 60,\n            bgc: '#f56c6c',\n          }, {\n            name: \"Mongo\",\n            percent: 50,\n            bgc: '#ffdc25',\n          }, {\n            name: \"小程序\",\n            percent: 65,\n            bgc: '#a4c4ff',\n          }\n        ]\n      }\n    },\n    computed: {\n      ...mapState({\n        xsScreen: state => state.baseStates.xsScreen\n      })\n    }\n  }\n</script>\n\n<style lang=\"scss\" type=\"text/scss\" scoped>\n  $baseColor: #409eff;\n  .myslf-baseinfo {\n    overflow: hidden;\n    background-color: #fcfcfc;\n    height: 100%;\n    box-sizing: border-box;\n    padding-top: 5vh;\n    .user-logo {\n      display: block;\n      width: 7.5vh;\n      height: 7.5vh;\n      border-radius: 7.5vh;\n      margin: 0 auto;\n    }\n    .user-name {\n      text-align: center;\n      font-size: 3vh;\n      font-family: \"webfonts\" !important;\n      padding-top: 3vh;\n    }\n    .brief-introduction {\n      text-align: center;\n      color: #b4b7b1;\n      padding: 1vh 0;\n    }\n    .technology-stack {\n      max-width: 600px;\n      margin: 0 auto;\n      padding-top: 10px;\n      .stack-title {\n        background-color: #ededed;\n        border-left: 3px solid $baseColor;\n        line-height: 3.2vh;\n        font-size: 14px;\n        font-family: \"微软雅黑\";\n        font-weight: 600;\n      }\n      .stack-content {\n        padding-top: 2vh;\n        li {\n          display: flex;\n          width: 100%;\n          justify-content: center;\n          align-items: center;\n          padding: 2.5vh 0;\n          span:first-child {\n            width: 20%;\n            text-align: right;\n            font-size: 16px;\n            padding-right: 1vw;\n            box-sizing: border-box;\n          }\n          span:last-child {\n            width: 80%;\n            padding-right: 1vw;\n            box-sizing: border-box;\n          }\n        }\n      }\n    }\n    &.xs-screen {\n      padding-top: 3vh;\n      .user-logo {\n        width: 45px;\n        height: 45px;\n        border-radius: 45px;\n      }\n      .user-name {\n        padding-top: 1vh;\n        font-size: 20px;\n      }\n      .technology-stack {\n        width: 90%;\n        .stack-title {\n          line-height: 28px;\n          font-size: 12px;\n          font-weight: normal;\n          font-family: \"微软雅黑\";\n        }\n        .stack-content {\n          padding-top: 3vh;\n          li {\n            justify-content: flex-start;\n            padding: 3vh 0;\n            span:first-child {\n              font-size: 12px;\n            }\n            span:last-child {\n              width: 70%;\n            }\n          }\n        }\n      }\n    }\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/view/myIntroduce/components/child1.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:['myslf-baseinfo', _vm.xsScreen?'xs-screen':'']},[_c('img',{staticClass:\"user-logo\",attrs:{\"src\":\"https://lioncc.oss-cn-beijing.aliyuncs.com/base-avtor/logo-1.jpg\",\"alt\":\"logo\"}}),_vm._v(\" \"),_c('p',{staticClass:\"user-name\"},[_vm._v(\"Cheng丶C\")]),_vm._v(\" \"),_c('p',{staticClass:\"brief-introduction\"},[_vm._v(\"一位奋战前线的搬砖农名工, 一心只读圣贤书，两耳不闻窗外事\")]),_vm._v(\" \"),_c('div',{staticClass:\"technology-stack\"},[_c('p',{staticClass:\"stack-title\"},[_vm._v(\"   My Technology Stack\")]),_vm._v(\" \"),_c('div',{staticClass:\"stack-content\"},[_c('ul',_vm._l((_vm.stackArr),function(item,index){return _c('li',{key:index},[_c('span',[_vm._v(_vm._s(item.name))]),_vm._v(\" \"),_c('span',[_c('el-progress',{attrs:{\"text-inside\":true,\"stroke-width\":15,\"percentage\":item.percent,\"color\":item.bgc}})],1)])}),0)])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-e7589f62\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/view/myIntroduce/components/child1.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e7589f62\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./child1.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./child1.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./child1.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e7589f62\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./child1.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-e7589f62\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/view/myIntroduce/components/child1.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"\\n  slider2\\n\")])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-72c7788d\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/view/myIntroduce/components/child2.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-72c7788d\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./child2.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./child2.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./child2.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-72c7788d\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./child2.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-72c7788d\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/view/myIntroduce/components/child2.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div>\r\n    slider2\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"child1\"\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/view/myIntroduce/components/child2.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"\\n  slider3\\n\")])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-8e511026\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/view/myIntroduce/components/child3.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-8e511026\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./child3.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./child3.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./child3.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-8e511026\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./child3.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-8e511026\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/view/myIntroduce/components/child3.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div>\r\n    slider3\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"child1\"\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/view/myIntroduce/components/child3.vue","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_dom7@2.1.3@dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_swiper@4.5.0@swiper/dist/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = ","<template>\n  <div ref=\"myIntroduce\" class=\"my-introduce\">\n    <div :class=\"['swiper-container',xsScreen?'xs-screen':'normal-screen']\">\n      <div class=\"swiper-wrapper\">\n        <div class=\"swiper-slide\" v-for=\"(item, index) in childComponents\" :key=\"index\">\n          <component :is=\"item\"></component>\n        </div>\n      </div>\n      <div class=\"swiper-pagination\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { mapState } from \"vuex\"\n  import child1 from './components/child1'\n  import child2 from './components/child2'\n  import child3 from './components/child3'\n  import Swiper from 'swiper'\n\n  export default {\n    name: \"my-introduce\",\n    data() {\n      return {\n        childComponents: ['child1']\n      }\n    },\n    created() {\n      // console.log(this.xsScreen);\n    },\n    mounted() {\n      var mySwiper = new Swiper('.swiper-container', {\n        pagination: {\n          el: '.swiper-pagination',\n          clickable: true,\n        },\n        autoplay: false,\n        direction: 'vertical',\n        mousewheel: true,\n      })\n    },\n    computed: {\n      ...mapState({\n        xsScreen: state => state.baseStates.xsScreen\n      })\n    },\n    components: {\n      child1, child2, child3\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped type=\"text/scss\">\n  .my-introduce {\n    width: 100%;\n    height: 100%;\n    .swiper-container {\n      height: 100%;\n      .swiper-slide {\n      }\n      .swiper-pagination {\n        right: 30px;\n        /deep/ .swiper-pagination-bullet {\n          width: 10px !important;\n          height: 10px !important;\n          margin: 12px 0;\n        }\n      }\n      &.xs-screen {\n        background: url(\"https://lioncc.oss-cn-beijing.aliyuncs.com/base-avtor/bgi-1.jpg\") no-repeat center;\n        background-size: cover;\n      }\n      &.normal-screen {\n        background: url(\"https://lioncc.oss-cn-beijing.aliyuncs.com/base-avtor/bgi-2.jpg\") no-repeat center;\n        background-size: cover;\n      }\n    }\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/view/myIntroduce/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"myIntroduce\",staticClass:\"my-introduce\"},[_c('div',{class:['swiper-container',_vm.xsScreen?'xs-screen':'normal-screen']},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.childComponents),function(item,index){return _c('div',{key:index,staticClass:\"swiper-slide\"},[_c(item,{tag:\"component\"})],1)}),0),_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination\"})])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-09a34580\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/view/myIntroduce/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-09a34580\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-09a34580\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-09a34580\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/view/myIntroduce/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}